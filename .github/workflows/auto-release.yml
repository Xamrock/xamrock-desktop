name: Auto Release on Version Change

on:
  push:
    branches: [main, master]
    paths: ['Xamrock.app/Contents/Info.plist']
  workflow_dispatch:

jobs:
  auto-release:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Get app version
      id: app_version
      run: |
        APP_VERSION=$(plutil -p Xamrock.app/Contents/Info.plist | grep CFBundleShortVersionString | cut -d'"' -f4)
        echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT
        echo "App version: $APP_VERSION"

    - name: Get latest tag
      id: latest_tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "none")
        echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "Latest tag: $LATEST_TAG"

    - name: Check if release needed
      id: check_release
      run: |
        APP_VERSION="${{ steps.app_version.outputs.APP_VERSION }}"
        LATEST_TAG="${{ steps.latest_tag.outputs.LATEST_TAG }}"

        echo "Comparing versions:"
        echo "  App version: $APP_VERSION"
        echo "  Latest tag: $LATEST_TAG"

        if [ "$APP_VERSION" != "$LATEST_TAG" ]; then
          echo "NEEDS_RELEASE=true" >> $GITHUB_OUTPUT
          echo "âœ… Version mismatch detected! Release needed for: $APP_VERSION"
        else
          echo "NEEDS_RELEASE=false" >> $GITHUB_OUTPUT
          echo "âœ… Versions match, no release needed"
        fi

    - name: Create distribution DMG
      if: steps.check_release.outputs.NEEDS_RELEASE == 'true'
      run: |
        # Install create-dmg for better DMG creation
        brew install create-dmg

        # Create a proper DMG
        create-dmg \
          --volname "Xamrock ${{ steps.app_version.outputs.APP_VERSION }}" \
          --window-pos 200 120 \
          --window-size 600 300 \
          --icon-size 100 \
          --icon "Xamrock.app" 175 120 \
          --hide-extension "Xamrock.app" \
          --app-drop-link 425 120 \
          "Xamrock-${{ steps.app_version.outputs.APP_VERSION }}.dmg" \
          "Xamrock.app"

    - name: Calculate SHA256
      if: steps.check_release.outputs.NEEDS_RELEASE == 'true'
      id: sha256
      run: |
        SHA256=$(shasum -a 256 Xamrock-${{ steps.app_version.outputs.APP_VERSION }}.dmg | cut -d ' ' -f 1)
        echo "SHA256=$SHA256" >> $GITHUB_OUTPUT
        echo "SHA256: $SHA256"

    - name: Create tag
      if: steps.check_release.outputs.NEEDS_RELEASE == 'true'
      run: |
        APP_VERSION="${{ steps.app_version.outputs.APP_VERSION }}"

        # Check if tag already exists and delete it
        if git rev-parse "$APP_VERSION" >/dev/null 2>&1; then
          echo "Deleting existing tag: $APP_VERSION"
          git tag -d "$APP_VERSION" || true
          git push origin ":refs/tags/$APP_VERSION" || true
        fi

        # Create new tag
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag "$APP_VERSION"
        git push origin "$APP_VERSION"
        echo "âœ… Created and pushed tag: $APP_VERSION"

    - name: Create GitHub Release
      if: steps.check_release.outputs.NEEDS_RELEASE == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.app_version.outputs.APP_VERSION }}
        name: Xamrock ${{ steps.app_version.outputs.APP_VERSION }}
        body: |
          ## Xamrock ${{ steps.app_version.outputs.APP_VERSION }}

          ### Installation via Homebrew
          ```bash
          brew tap xamrock/xamrock-desktop
          brew install --cask xamrock
          ```

          ### Manual Installation
          1. Download the `Xamrock-${{ steps.app_version.outputs.APP_VERSION }}.dmg` file below
          2. Open the DMG file
          3. Drag `Xamrock.app` to your `/Applications` folder

          ### SHA256 Checksum
          ```
          ${{ steps.sha256.outputs.SHA256 }}
          ```
        files: Xamrock-${{ steps.app_version.outputs.APP_VERSION }}.dmg
        draft: false
        prerelease: false

    - name: Update Homebrew cask formula
      if: steps.check_release.outputs.NEEDS_RELEASE == 'true'
      run: |
        echo "Before update:"
        cat Casks/xamrock.rb

        # Update the cask file with new version and SHA256
        sed -i '' "s/version \".*\"/version \"${{ steps.app_version.outputs.APP_VERSION }}\"/" Casks/xamrock.rb
        sed -i '' "s/sha256 \".*\"/sha256 \"${{ steps.sha256.outputs.SHA256 }}\"/" Casks/xamrock.rb

        # Update URL to use .dmg instead of .zip
        sed -i '' 's/Xamrock-#{version}\.zip/Xamrock-#{version}.dmg/' Casks/xamrock.rb

        echo "After update:"
        cat Casks/xamrock.rb

        echo "Updated cask formula:"
        echo "  Version: ${{ steps.app_version.outputs.APP_VERSION }}"
        echo "  SHA256: ${{ steps.sha256.outputs.SHA256 }}"

    - name: Commit updated cask formula
      if: steps.check_release.outputs.NEEDS_RELEASE == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Ensure we're on main branch
        git checkout main

        # Check if there are changes to commit
        if git diff --quiet Casks/xamrock.rb; then
          echo "No changes to cask formula, skipping commit"
        else
          echo "Changes detected, committing cask formula update"
          git add Casks/xamrock.rb
          git status
          git commit -m "Update Homebrew cask to ${{ steps.app_version.outputs.APP_VERSION }}"
          git push origin main
          echo "âœ… Committed and pushed cask formula update"
        fi

        echo "ðŸŽ‰ Release complete! Users can now run:"
        echo "  brew update && brew upgrade --cask xamrock"